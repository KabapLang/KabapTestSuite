/*
 * Copyright 2017-22 Unify Process Magic Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
{
	"utf8": "âœ“",
	"filter": "",
	"test_format": {
		"filename": "String; full file name (without path)",
		"extensions": "Array; list of names of all extensions to load before testing",
		"watchdog": "Integer; watchdog tick limit, use -1 for the platform default",
		"success": "Boolean; whether the test is expected to succeed or not",
		"stdout": "String; expected value of stdout after execution",
		"stderr": "String; expected value of stderr after execution",
		"updated": "String; UTC date of test modification, formatted YYYY-MM-DD HH:II:SS",
		"author": "String; identity of the test author",
		"description": "String; brief description of what is being tested"
	},
	"tests": [
		{
			"filename": "0_sanity_stderr.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "42",
			"updated": "2020-01-29 00:15:50",
			"author": "Paul J",
			"description": "Sanity check that stderr can be set"
		},
		{
			"filename": "0_sanity_stdout.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "42",
			"stderr": "",
			"updated": "2020-01-29 00:15:50",
			"author": "Paul J",
			"description": "Sanity check that stdout can be set"
		},
		{
			"filename": "0_sanity_stderr_stdout.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "42",
			"stderr": "42",
			"updated": "2020-01-29 00:15:50",
			"author": "Paul J",
			"description": "Sanity check that stderr and stdout can both be set"
		},
		{
			"filename": "1_script_empty.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Parser read an empty file"
		},
		{
			"filename": "1_script_big.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Parser read a big file; you should read it too (this test will take a minute)"
		},
		{
			"filename": "1_linehint_lf_11.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 11: [FATAL] Missing statement",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Parser count 11 lines in UNIX format before statement end"
		},
		{
			"filename": "1_linehint_crlf_11.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 11: [FATAL] Missing statement",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Parser count 11 lines in Windows format before statement end"
		},
		{
			"filename": "1_linehint_cr_11.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 11: [FATAL] Missing statement",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Parser count 11 lines in classic Mac format before statement end"
		},
		{
			"filename": "1_script_utf8_bom.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "1",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Parser reading a UTF-8 file with Byte Order Mark"
		},
		{
			"filename": "1_script_unexpected_char_ascii.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Unexpected character: @",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Parser reading an ASCII character not part of the language"
		},
		{
			"filename": "1_script_unexpected_char_emoji.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Unexpected character: ðŸ˜‚",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Parser reading an emoji character not part of the language"
		},
		{
			"filename": "2_statement_missing.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Missing statement",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering statement end without anything before it"
		},
		{
			"filename": "2_label_notfirst.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] A label must be in its own statement",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering a label as part of a bigger statement"
		},
		{
			"filename": "2_label_isfirst.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering a label with another statement after it"
		},
		{
			"filename": "2_label_flow_if.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Required label after :",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering a label with flow keyword if"
		},
		{
			"filename": "2_label_flow_break.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Required label after :",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering a label with flow keyword break"
		},
		{
			"filename": "2_label_flow_goto.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Required label after :",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering a label with flow keyword goto"
		},
		{
			"filename": "2_label_flow_resume.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Required label after :",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering a label with flow keyword resume"
		},
		{
			"filename": "2_unterminated_comment.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering comment opener without line ending"
		},
		{
			"filename": "2_unterminated_string.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Unterminated string",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering string characters without a closing quote, statement end or line ending"
		},
		{
			"filename": "2_unterminated_number.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Unterminated number",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering number characters without a statement end or line ending"
		},
		{
			"filename": "2_unterminated_reference.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Unterminated reference",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering reference without a statement end or line ending"
		},
		{
			"filename": "2_unterminated_variable.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Unterminated variable",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering variable name without an assignment, statement end or line ending"
		},
		{
			"filename": "2_unterminated_label.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Unterminated label",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering label name without a statement end or line ending"
		},
		{
			"filename": "2_blocks_closed_unopened.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Closing unopened block",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering block close without a preceding block open"
		},
		{
			"filename": "2_blocks_opened_unclosed.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Unclosed open block",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering block open without a following block close"
		},
		{
			"filename": "2_blocks_empty.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering block open and block close without contents"
		},
		{
			"filename": "2_operator_other_assignment.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering operator assignment with integer"
		},
		{
			"filename": "2_operator_comparator_lessthan.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering comparator operator less than with integers"
		},
		{
			"filename": "2_operator_comparator_lessthanequals.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering comparator operator less than or equal to with integers"
		},
		{
			"filename": "2_operator_comparator_equals.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering comparator operator equal to with integers"
		},
		{
			"filename": "2_operator_comparator_greaterthanequals.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering comparator operator greater than or equal to with integers"
		},
		{
			"filename": "2_operator_comparator_greaterthan.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering comparator operator greater than with integers"
		},
		{
			"filename": "2_operator_comparator_notequals.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering comparator operator not equal to with integers"
		},
		{
			"filename": "2_operator_mathematical_addition.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering mathematical operator addition with integers"
		},
		{
			"filename": "2_operator_mathematical_subtraction.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering mathematical operator subtraction with integers"
		},
		{
			"filename": "2_operator_mathematical_multiplication.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering mathematical operator multiplication with integers"
		},
		{
			"filename": "2_operator_mathematical_division.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering mathematical operator division with integers"
		},
		{
			"filename": "2_operator_mathematical_modulo.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering mathematical operator modulo with integers"
		},
		{
			"filename": "2_operator_mathematical_power.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering mathematical operator power with integers"
		},
		{
			"filename": "2_operator_mathematical_increment.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering mathematical operator increment with integer"
		},
		{
			"filename": "2_operator_mathematical_decrement.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering mathematical operator decrement with integer"
		},
		{
			"filename": "2_operator_string_concatenator.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering string operator concatenate with integers"
		},
		{
			"filename": "2_operator_invalid.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Unknown operator: !",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering unknown operator not with integers"
		},
		{
			"filename": "2_conditional_ending.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] A conditional requires a statement after",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering flow if without following statement"
		},
		{
			"filename": "2_conditional_label.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] A conditional cannot be followed by a label",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering flow if with following label"
		},
		{
			"filename": "2_conditional_block.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] A conditional cannot be followed by a blockend",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering flow if with following block end"
		},
		{
			"filename": "2_reference_required_label.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Required label after :",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering label without a name"
		},
		{
			"filename": "2_reference_required_variable.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Required variable after $",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering variable without a name"
		},
		{
			"filename": "2_reference_invalid_label.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Invalid label, must start with a letter or underscore, and contain only letters, numbers and underscores",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering label with an invalid name"
		},
		{
			"filename": "2_reference_invalid_variable.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Invalid variable, must start with a letter or underscore, and contain only letters, numbers and underscores",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering variable with an invalid name"
		},
		{
			"filename": "2_reference_duplicate_label.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 2: [FATAL] Label already used on line 1: a",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Tokenizer encountering duplicate label names"
		},
		{
			"filename": "4_watchdog_timeout.kabap",
			"extensions": [],
			"watchdog": 1000,
			"success": false,
			"stdout": "",
			"stderr": "Line 2: [FATAL] Watchdog 1000 ticks timeout, execution break",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Executor allows limited execution before the watchdog stops it"
		},
		{
			"filename": "4_watchdog_notimeout.kabap",
			"extensions": [],
			"watchdog": 0,
			"success": true,
			"stdout": "2000",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Executor allows indefinite execution without the watchdog stopping it"
		},
		{
			"filename": "4_watchdog_error_handler.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 2: [FATAL] Watchdog 1000 ticks timeout, execution break",
			"updated": "2020-02-06 22:41:08",
			"author": "Paul J",
			"description": "Executor allow limited execution when watchdog creates warning and error handler defined"
		},
		{
			"filename": "4_sleep.kabap",
			"extensions": [],
			"watchdog": 0,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2020-02-04 11:09:13",
			"author": "Paul J",
			"description": "Executor allows sleep to proceed"
		},
		{
			"filename": "4_sleep.kabap",
			"extensions": [],
			"watchdog": 100,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Sleep exceeds watchdog 102 ticks timeout, early execution break",
			"updated": "2020-02-04 11:09:13",
			"author": "Paul J",
			"description": "Executor disallows sleep as it would exceed watchdog"
		},
		{
			"filename": "4_error_handler_undefined.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Reference not found: fail",
			"updated": "2020-01-29 14:13:30",
			"author": "Paul J",
			"description": "Error handler not defined so fails execution"
		},
		{
			"filename": "4_error_handler_defined.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "Line 1: [WARNING] Reference not found: fail",
			"updated": "2020-01-29 14:13:30",
			"author": "Paul J",
			"description": "Error handler defined so execution continues"
		},
		{
			"filename": "5_typemixing_number_string.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "2",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Resolver process number and string"
		},
		{
			"filename": "5_typemixing_number_variable.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "2",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Resolver process number and variable"
		},
		{
			"filename": "5_typemixing_number_reference.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "2",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Resolver process number and reference"
		},
		{
			"filename": "5_typemixing_string_number.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "2",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Resolver process string and number"
		},
		{
			"filename": "5_typemixing_string_variable.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "2",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Resolver process string and variable"
		},
		{
			"filename": "5_typemixing_string_reference.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "2",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Resolver process string and reference"
		},
		{
			"filename": "5_typemixing_variable_number.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "2",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Resolver process variable and number"
		},
		{
			"filename": "5_typemixing_variable_string.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "2",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Resolver process variable and string"
		},
		{
			"filename": "5_typemixing_variable_reference.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "2",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Resolver process variable and reference"
		},
		{
			"filename": "5_typemixing_reference_number.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "2",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Resolver process reference and number"
		},
		{
			"filename": "5_typemixing_reference_string.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "2",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Resolver process reference and string"
		},
		{
			"filename": "5_typemixing_reference_variable.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "2",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Resolver process reference and variable"
		},
		{
			"filename": "5_typemixing_everything.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "10",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Resolver process reference, number, variable and string"
		},
		{
			"filename": "5_resolution_order.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "1",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Resolver process statement in order"
		},
		{
			"filename": "5_casesensitivity_flow_break.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Resolver being case insensitive for flow break"
		},
		{
			"filename": "5_casesensitivity_flow_goto.kabap",
			"extensions": [],
			"watchdog": 1000,
			"success": false,
			"stdout": "",
			"stderr": "Line 2: [FATAL] Watchdog 1000 ticks timeout, execution break",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Resolver being case insensitive for flow goto"
		},
		{
			"filename": "5_casesensitivity_flow_if.kabap",
			"extensions": [],
			"watchdog": 1000,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Resolver being case insensitive for flow if"
		},
		{
			"filename": "5_casesensitivity_output.kabap",
			"extensions": [],
			"watchdog": 1000,
			"success": true,
			"stdout": "Pass",
			"stderr": "",
			"updated": "2020-01-29 00:15:50",
			"author": "Paul J",
			"description": "Resolver being case insensitive for output"
		},
		{
			"filename": "5_casesensitivity_error.kabap",
			"extensions": [],
			"watchdog": 1000,
			"success": true,
			"stdout": "",
			"stderr": "Pass",
			"updated": "2020-01-29 00:15:50",
			"author": "Paul J",
			"description": "Resolver being case insensitive for error"
		},
		{
			"filename": "5_casesensitivity_label.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "Pass",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Resolver being case insensitive for label"
		},
		{
			"filename": "5_casesensitivity_variable.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "Pass",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Resolver being case insensitive for variable"
		},
		{
			"filename": "5_casesensitivity_reference.kabap",
			"extensions": [
				"KabapTestExtension"
			],
			"watchdog": -1,
			"success": true,
			"stdout": "Pass",
			"stderr": "",
			"updated": "2018-08-06 01:33:20",
			"author": "Paul J",
			"description": "Resolver being case insensitive for reference"
		},
		{
			"filename": "5_casesensitivity_extension.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "0",
			"stderr": "",
			"updated": "2018-07-31 17:33:07",
			"author": "Paul J",
			"description": "Resolver being case insensitive for extension"
		},
		{
			"filename": "6_block_unconditional.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "Pass",
			"stderr": "",
			"updated": "2019-09-11 10:59:07",
			"author": "Paul J",
			"description": "Language flow block without conditional"
		},
		{
			"filename": "6_break_valid.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow break ends execution"
		},
		{
			"filename": "6_break_extraneous.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Nothing can be after break",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow goto rejects extraneous code"
		},
		{
			"filename": "6_goto_valid.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow goto jumps program flow"
		},
		{
			"filename": "6_goto_missing.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Expected label after goto",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow goto requires label"
		},
		{
			"filename": "6_goto_noreference.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Expected label after goto",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow goto requires text label not numeric"
		},
		{
			"filename": "6_goto_extraneous.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Nothing can be after label",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow goto rejects extraneous code"
		},
		{
			"filename": "6_goto_unknown_label.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Unknown label: a",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow goto rejects unknown label"
		},
		{
			"filename": "6_if_condition_missing.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Missing if condition to be evaluated",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow conditional rejects no condition"
		},
		{
			"filename": "6_if_condition_multiple.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Only 1 if condition can be evaluated",
			"updated": "2018-07-24 12:04:17",
			"author": "Paul J",
			"description": "Language flow conditional rejects more than 1 condition"
		},
		{
			"filename": "6_if_condition_invalid_block1.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Missing statement",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow conditional rejects condition containing a block start"
		},
		{
			"filename": "6_if_condition_invalid_block2.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] An if condition cannot contain a blockstart",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow conditional rejects condition containing a block start and spurious char"
		},
		{
			"filename": "6_if_condition_invalid_block3.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 2: [FATAL] A conditional cannot be followed by a blockend",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow conditional rejects condition containing a block end"
		},
		{
			"filename": "6_if_condition_invalid_flow.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] An if condition cannot contain a flow",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow conditional rejects condition containing a flow"
		},
		{
			"filename": "6_if_condition_true1.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "Pass",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow conditional accepts true from positive integer 1"
		},
		{
			"filename": "6_if_condition_true2.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "Pass",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow conditional accepts true from negative integer 1"
		},
		{
			"filename": "6_if_condition_true3.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "Pass",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow conditional accepts true from positive decimal 0.1"
		},
		{
			"filename": "6_if_condition_true4.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "Pass",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow conditional accepts true from string 1"
		},
		{
			"filename": "6_if_condition_true5.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "Pass",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow conditional accepts true from positive integer 2"
		},
		{
			"filename": "6_if_condition_true6.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "Pass",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow conditional accepts true from reference"
		},
		{
			"filename": "6_if_condition_true7.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "Pass",
			"stderr": "",
			"updated": "2018-07-24 12:11:27",
			"author": "Paul J",
			"description": "Language flow conditional accepts true from comparator operator"
		},
		{
			"filename": "6_if_condition_true8.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "Pass",
			"stderr": "",
			"updated": "2018-07-24 12:13:43",
			"author": "Paul J",
			"description": "Language flow conditional accepts true from comparator operator"
		},
		{
			"filename": "6_if_condition_true9.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "Pass",
			"stderr": "",
			"updated": "2018-07-24 12:15:05",
			"author": "Paul J",
			"description": "Language flow conditional accepts true from concatenate operator"
		},
		{
			"filename": "6_if_condition_false1.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow conditional accepts false from positive integer 0"
		},
		{
			"filename": "6_if_condition_false2.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow conditional accepts false from negative integer 0"
		},
		{
			"filename": "6_if_condition_false3.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow conditional accepts false from positive decimal 0.0"
		},
		{
			"filename": "6_if_condition_false4.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow conditional accepts false from string 0"
		},
		{
			"filename": "6_if_condition_false5.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-07-24 12:16:40",
			"author": "Paul J",
			"description": "Language flow conditional accepts false from comparator operator"
		},
		{
			"filename": "6_if_condition_false6.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-07-24 12:18:51",
			"author": "Paul J",
			"description": "Language flow conditional accepts false from comparator operator"
		},
		{
			"filename": "6_if_condition_false7.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-07-24 12:19:07",
			"author": "Paul J",
			"description": "Language flow conditional accepts false from concatenate operator"
		},
		{
			"filename": "6_if_true_block.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "Pass",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow conditional block execution on true"
		},
		{
			"filename": "6_if_false_block.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow conditional no block execution on false"
		},
		{
			"filename": "6_if_true_statement_nested_true.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "Pass",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow conditional nested execution on true"
		},
		{
			"filename": "6_if_true_statement_nested_false.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow conditional nested partial execution on true and false"
		},
		{
			"filename": "6_if_false_statement_nested_true.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow conditional nested no execution on false and true"
		},
		{
			"filename": "6_if_false_statement_nested_false.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow conditional nested no execution on false"
		},
		{
			"filename": "6_if_true_statement_nested_true_block.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "Pass",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow conditional nested block execution on true"
		},
		{
			"filename": "6_if_true_statement_nested_false_block.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow conditional nested block partial execution on true and false"
		},
		{
			"filename": "6_if_false_statement_nested_true_block.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow conditional nested block no execution on false and true"
		},
		{
			"filename": "6_if_false_statement_nested_false_block.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow conditional nested block no execution on false"
		},
		{
			"filename": "6_if_true_block_unbalanced_r1.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Closing unopened block",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language failed execution on unbalanced block end with pair"
		},
		{
			"filename": "6_if_true_block_unbalanced_r2.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Closing unopened block",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language failed execution on unbalanced block end without pair"
		},
		{
			"filename": "6_if_true_block_unbalanced_l1.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Unclosed open block",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language failed execution on unbalanced block start with pair"
		},
		{
			"filename": "6_if_true_block_unbalanced_l2.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Unclosed open block",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language failed execution on unbalanced block start without pair"
		},
		{
			"filename": "6_if_nested_false.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "111",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow conditional nested mixed block and immediate complex pattern with false"
		},
		{
			"filename": "6_if_nested_true.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "222",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow conditional nested mixed block and immediate complex pattern with true"
		},
		{
			"filename": "6_resume_no_error.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Can only resume after an error",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow resume with no error"
		},
		{
			"filename": "6_resume_assigned_lv.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Nothing can be after resume",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow resume assigned as left value"
		},
		{
			"filename": "6_resume_no_error_handler.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Reference not found: error.throw",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow resume not called"
		},
		{
			"filename": "6_resume_throw_error_not_resumed.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "Line 1: [WARNING] Can only resume after an error",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow resume error handler not resumed"
		},
		{
			"filename": "6_resume_nested_if.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 2: [FATAL] Can only resume after an error",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow conditional resume with no error"
		},
		{
			"filename": "6_resume_clusterf_1.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "Line 4: [WARNING] Can only resume after an error",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow resume error handler and resume ping-pong"
		},
		{
			"filename": "6_resume_clusterf_2.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "Line 2: [WARNING] Can only resume after an error",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow resume error handler and resume ping-pong"
		},
		{
			"filename": "6_resume_clusterf_3.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "Line 3: [WARNING] Can only resume after an error",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow resume error handler and resume ping-pong"
		},
		{
			"filename": "6_resume_clusterf_4.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 3: [FATAL] Watchdog 1000 ticks timeout, execution break",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow resume not called due to error handler and resume ping-pong"
		},
		{
			"filename": "6_resume_conditional_operand.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] A conditional requires a statement after",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow resume as operand in conditional"
		},
		{
			"filename": "6_resume_conditional_operator.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Nothing can be after resume",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language flow resume with operand"
		},
		{
			"filename": "7_operator_operand_missing_l1.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Missing left-hand operand before operator: +",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator left operand missing without assignment"
		},
		{
			"filename": "7_operator_operand_missing_l2.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Missing left-hand operand before operator: +",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator left operand missing with assignment"
		},
		{
			"filename": "7_operator_operand_missing_r1.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Missing right-hand operand after operator: +",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator right operand missing without assignment"
		},
		{
			"filename": "7_operator_operand_missing_r2.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator right operand missing with assignment"
		},
		{
			"filename": "7_operator_operand_operator_l.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Left-hand operand cannot be a operator",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator left operand is operator"
		},
		{
			"filename": "7_operator_operand_operator_r.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Right-hand operand cannot be a operator",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator right operand is operator"
		},
		{
			"filename": "7_operator_mathematical_addition.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "6",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator mathematical addition with postive integers"
		},
		{
			"filename": "7_operator_mathematical_subtraction.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "-2",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator mathematical subtraction with postive integers"
		},
		{
			"filename": "7_operator_mathematical_multiplication.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "8",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator mathematical multiplication with postive integers"
		},
		{
			"filename": "7_operator_mathematical_division.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "0.5",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator mathematical division with postive integers"
		},
		{
			"filename": "7_operator_mathematical_division_zero.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "0",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator mathematical division by zero with postive integer"
		},
		{
			"filename": "7_operator_mathematical_division_precision_2dp.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "0.25",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator mathematical default scale 2 decimal places returned"
		},
		{
			"filename": "7_operator_mathematical_division_precision_3dp.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "0.333",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator mathematical default scale 3 decimal places returned"
		},
		{
			"filename": "7_operator_mathematical_modulo.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "2",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator mathematical modulo with postive integers"
		},
		{
			"filename": "7_operator_mathematical_power.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "16",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator mathematical power with postive integers"
		},
		{
			"filename": "7_operator_mathematical_increment.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "3",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator mathematical increment with postive integer"
		},
		{
			"filename": "7_operator_mathematical_decrement.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "1",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator mathematical decrement with postive integer"
		},
		{
			"filename": "7_operator_mathematical_all1.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "0.07",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator mathematical testing all operators with increment"
		},
		{
			"filename": "7_operator_mathematical_all2.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "0.09",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator mathematical testing all operators with decrement"
		},
		{
			"filename": "7_operator_mathematical_negative_addition.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "-2",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator mathematical negative integer addition"
		},
		{
			"filename": "7_operator_mathematical_negative_subtraction.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "0",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator mathematical negative integer subtraction"
		},
		{
			"filename": "7_operator_mathematical_negative_multiplication.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "1",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator mathematical negative integer multiplication"
		},
		{
			"filename": "7_operator_mathematical_negative_division.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "1",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator mathematical negative integer division"
		},
		{
			"filename": "7_operator_mathematical_negative_modulo.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "-0",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator mathematical negative integer modulo"
		},
		{
			"filename": "7_operator_mathematical_negative_power.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "-1",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator mathematical negative integer power"
		},
		{
			"filename": "7_operator_mathematical_negative_increment.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "0",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator mathematical negative integer increment"
		},
		{
			"filename": "7_operator_mathematical_negative_decrement.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "-2",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator mathematical negative integer decrement"
		},
		{
			"filename": "7_operator_comparator_lessthan_lt.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "1",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator comparator less than with passing lt"
		},
		{
			"filename": "7_operator_comparator_lessthan_eq.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "0",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator comparator less than with failing eq"
		},
		{
			"filename": "7_operator_comparator_lessthan_gt.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "0",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator comparator less than with failing gt"
		},
		{
			"filename": "7_operator_comparator_lessthanequals_lt.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "1",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator comparator less than or equal to with passing lq"
		},
		{
			"filename": "7_operator_comparator_lessthanequals_eq.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "1",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator comparator less than with passing eq"
		},
		{
			"filename": "7_operator_comparator_lessthanequals_gt.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "0",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator comparator less than with failing gt"
		},
		{
			"filename": "7_operator_comparator_equals_lt.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "0",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator comparator equal to with failing lt"
		},
		{
			"filename": "7_operator_comparator_equals_eq.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "1",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator comparator equal to with passing eq"
		},
		{
			"filename": "7_operator_comparator_equals_gt.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "0",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator comparator equal to with failing gt"
		},
		{
			"filename": "7_operator_comparator_equals_string_eq.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "1",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator comparator equal to with passing eq string"
		},
		{
			"filename": "7_operator_comparator_equals_string_ne.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "0",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator comparator equal to with failing ne string"
		},
		{
			"filename": "7_operator_comparator_greaterthanequals_lt.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "0",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator comparator greater than or equal to with failing lt"
		},
		{
			"filename": "7_operator_comparator_greaterthanequals_eq.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "1",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator comparator greater than or equal to with passing eq"
		},
		{
			"filename": "7_operator_comparator_greaterthanequals_gt.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "1",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator comparator greater than or equal to with passing gt"
		},
		{
			"filename": "7_operator_comparator_greaterthan_lt.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "0",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator comparator greater than with failing lt"
		},
		{
			"filename": "7_operator_comparator_greaterthan_eq.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "0",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator comparator greater than with failing eq"
		},
		{
			"filename": "7_operator_comparator_greaterthan_gt.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "1",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator comparator greater than with passing gt"
		},
		{
			"filename": "7_operator_comparator_notequals_lt.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "1",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator comparator not equal to with passing lt"
		},
		{
			"filename": "7_operator_comparator_notequals_eq.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "0",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator comparator not equal to with failing eq"
		},
		{
			"filename": "7_operator_comparator_notequals_gt.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "1",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator comparator not equal to with passing gt"
		},
		{
			"filename": "7_operator_comparator_notequals_string_eq.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "0",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator comparator not equal to with failing eq string"
		},
		{
			"filename": "7_operator_comparator_notequals_string_ne.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "1",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator comparator not equal to with passing ne string"
		},
		{
			"filename": "7_operator_comparator_all.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "1",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator comparator all operators in one statement"
		},
		{
			"filename": "7_operator_comparator_typemixing_eq_eq.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "1",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator comparator passing equal to number and string"
		},
		{
			"filename": "7_operator_comparator_typemixing_eq_ne.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "0",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator comparator failing not equal to number and string"
		},
		{
			"filename": "7_operator_comparator_typemixing_ne_eq.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "0",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator comparator failing not equal to number and string"
		},
		{
			"filename": "7_operator_comparator_typemixing_ne_ne.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "1",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator comparator passing not equal to number and string"
		},
		{
			"filename": "7_operator_mixing_all.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "1",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator all comparator, mathematical and string in one statement"
		},
		{
			"filename": "7_operator_is_operator.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operators are not found in non-operator contexts"
		},
		{
			"filename": "7_assignment_lrv_invalid_novalue.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Assignment expects 1 left-hand value",
			"updated": "2018-07-24 11:20:46",
			"author": "Paul J",
			"description": "Language operator assignment missing left and right operand"
		},
		{
			"filename": "7_assignment_lv_invalid_novalue.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Assignment expects 1 left-hand value",
			"updated": "2018-07-24 11:21:03",
			"author": "Paul J",
			"description": "Language operator assignment missing left operand"
		},
		{
			"filename": "7_assignment_lv_invalid_extraneous.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Assignment expects 1 left-hand value",
			"updated": "2018-07-24 11:22:17",
			"author": "Paul J",
			"description": "Language operator assignment multiple left operands"
		},
		{
			"filename": "7_assignment_lv_invalid_label.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Assignment left-hand value must be a variable or reference",
			"updated": "2018-07-24 11:24:58",
			"author": "Paul J",
			"description": "Language operator assignment left operand contains label"
		},
		{
			"filename": "7_assignment_lv_invalid_flow.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Expected label after goto",
			"updated": "2018-07-24 11:25:56",
			"author": "Paul J",
			"description": "Language operator assignment left operand contains flow"
		},
		{
			"filename": "7_assignment_lv_invalid_block.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Assignment expects 1 left-hand value",
			"updated": "2018-07-24 11:10:22",
			"author": "Paul J",
			"description": "Language operator assignment left operand contains block"
		},
		{
			"filename": "7_assignment_lv_invalid_immutable1.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Assignment left-hand value must be a variable or reference",
			"updated": "2018-07-24 11:33:57",
			"author": "Paul J",
			"description": "Language operator assignment left operand contains immutable constant"
		},
		{
			"filename": "7_assignment_lv_invalid_immutable2.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Assignment left-hand value must be a variable or reference",
			"updated": "2018-07-24 11:48:08",
			"author": "Paul J",
			"description": "Language operator assignment left operand contains immutable constant"
		},
		{
			"filename": "7_assignment_rv_valid_comparison.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator assignment right operand contains comparator operator"
		},
		{
			"filename": "7_assignment_rv_valid_operators.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "foobar",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator assignment right operand contains concatenate operator"
		},
		{
			"filename": "7_assignment_rv_invalid_novalue.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Assignment expects a right-hand value",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator assignment missing right operand"
		},
		{
			"filename": "7_assignment_rv_invalid_multiple.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Only 1 assignment can be in a statement",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator assignment right operand contains assignment"
		},
		{
			"filename": "7_assignment_rv_invalid_extraneous.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Assignment takes only one right-hand value",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator assignment multiple right operands"
		},
		{
			"filename": "7_assignment_rv_invalid_label.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] A label must be in its own statement",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator assignment right operand contains label"
		},
		{
			"filename": "7_assignment_rv_invalid_flow.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Assignment cannot contain a flow",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language operator assignment right operand contains flow"
		},
		{
			"filename": "7_assignment_rv_invalid_block.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Missing statement",
			"updated": "2018-07-24 11:10:22",
			"author": "Paul J",
			"description": "Language operator assignment right operand contains block"
		},
		{
			"filename": "7_variable_undefined.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Undefined variable: b",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language variable undefined"
		},
		{
			"filename": "7_variable_valid.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language variable defined"
		},
		{
			"filename": "8_reference_call_unused.kabap",
			"extensions": [
				"UnitTestExtension",
				"KabapTestExtension"
			],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language reference unknown called with nothing returned and nothing used"
		},
		{
			"filename": "8_reference_call_used.kabap",
			"extensions": [
				"UnitTestExtension",
				"KabapTestExtension"
			],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language reference known called with nothing used"
		},
		{
			"filename": "8_reference_call_undefined_prefix.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Reference not found: foo",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language reference unknown prefix called"
		},
		{
			"filename": "8_reference_call_undefined_full.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Reference not found: foo.bar",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language reference unknown called"
		},
		{
			"filename": "8_reference_call_defined_invalid1.kabap",
			"extensions": [
				"KabapTestExtension"
			],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] KabapTestExtension requires references to have 1 dot separator",
			"updated": "2018-08-06 01:57:33",
			"author": "Paul J",
			"description": "Language reference known called invalid no dot"
		},
		{
			"filename": "8_reference_call_defined_invalid2.kabap",
			"extensions": [
				"KabapTestExtension"
			],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] KabapTestExtension requires references to have 1 dot separator",
			"updated": "2018-08-06 01:57:48",
			"author": "Paul J",
			"description": "Language reference known called invalid double dot"
		},
		{
			"filename": "8_reference_read_valid.kabap",
			"extensions": [
				"UnitTestExtension"
			],
			"watchdog": -1,
			"success": true,
			"stdout": "org.kabap.UnitTesting$1",
			"stderr": "",
			"updated": "2020-02-03 10:55:01",
			"author": "Paul J",
			"description": "Language reference known called and returned"
		},
		{
			"filename": "8_reference_read_multicall_a.kabap",
			"extensions": [
				"UnitTestExtension",
				"KabapTestExtension"
			],
			"watchdog": -1,
			"success": true,
			"stdout": "KabapTestExtension",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language reference multiple known called and returned"
		},
		{
			"filename": "8_reference_read_multicall_b.kabap",
			"extensions": [
				"UnitTestExtension",
				"KabapTestExtension"
			],
			"watchdog": -1,
			"success": true,
			"stdout": "org.kabap.UnitTesting$1",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language reference multiple known called and returned"
		},
		{
			"filename": "8_reference_read_multicall_all.kabap",
			"extensions": [
				"KabapTestExtension",
				"UnitTestExtension"
			],
			"watchdog": -1,
			"success": true,
			"stdout": "ALPHA ",
			"stderr": "",
			"updated": "2018-08-06 01:18:06",
			"author": "Paul J",
			"description": "Language reference multiple known called and returned"
		},
		{
			"filename": "8_reference_read_multicall_all.kabap",
			"extensions": [
				"UnitTestExtension",
				"KabapTestExtension"
			],
			"watchdog": -1,
			"success": true,
			"stdout": "BETA ALPHA ",
			"stderr": "",
			"updated": "2018-08-06 01:17:54",
			"author": "Paul J",
			"description": "Language reference multiple known called and returned in reverse order (same as above but extension load order reversed)"
		},
		{
			"filename": "8_reference_read_multicall_none.kabap",
			"extensions": [
				"UnitTestExtension",
				"KabapTestExtension"
			],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Reference not found: test.duplicatec",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language reference known multiple prefixes called but nothing accepted"
		},
		{
			"filename": "8_reference_read_catchall.kabap",
			"extensions": [
				"UnitTestExtension",
				"KabapTestExtension",
				"CatchAll"
			],
			"watchdog": -1,
			"success": true,
			"stdout": "CATCHALL",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language reference known with prefix with one accepting"
		},
		{
			"filename": "8_reference_read_predefined.kabap",
			"extensions": [
				"KabapTestExtension"
			],
			"watchdog": -1,
			"success": true,
			"stdout": "Pass bar",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language reference read value predefined in extension at run-time"
		},
		{
			"filename": "8_reference_write_valid.kabap",
			"extensions": [
				"KabapTestExtension"
			],
			"watchdog": -1,
			"success": true,
			"stdout": "Pass",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language reference write value and read it"
		},
		{
			"filename": "8_reference_write_invalid.kabap",
			"extensions": [
				"KabapTestExtension"
			],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] test.immutable is immutable",
			"updated": "2018-08-06 01:35:05",
			"author": "Paul J",
			"description": "Language reference write value which is immutable rejected"
		},
		{
			"filename": "8_kabap_notfound1.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Reference not found: kabap.nothing",
			"updated": "2018-08-06 01:16:43",
			"author": "Paul J",
			"description": "Language reference internal Kabap extension read value which is unknown rejected"
		},
		{
			"filename": "8_kabap_notfound2.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Reference not found: kabap.nothing.nothing",
			"updated": "2018-08-06 01:16:43",
			"author": "Paul J",
			"description": "Language reference internal Kabap extension read value which is malformatted rejected"
		},
		{
			"filename": "8_kabap_version_read.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "1.0",
			"stderr": "",
			"updated": "2020-02-03 10:55:01",
			"author": "Paul J",
			"description": "Language reference internal Kabap extension version number returned"
		},
		{
			"filename": "8_kabap_version_write.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] kabap.version can only be read not written",
			"updated": "2020-02-03 10:55:01",
			"author": "Paul J",
			"description": "Language reference internal Kabap extension write version number rejected"
		},
		{
			"filename": "8_kabap_scale_0dp.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "0",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language reference internal Kabap extension set scale to 0dp"
		},
		{
			"filename": "8_kabap_scale_1dp.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "0.3",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language reference internal Kabap extension set scale to 1dp"
		},
		{
			"filename": "8_kabap_scale_2dp.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "0.33",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language reference internal Kabap extension set scale to 2dp"
		},
		{
			"filename": "8_kabap_scale_3dp.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "0.333",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language reference internal Kabap extension set scale to 3dp"
		},
		{
			"filename": "8_kabap_scale_4dp.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "0.3333",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language reference internal Kabap extension set scale to 4dp"
		},
		{
			"filename": "8_kabap_scale_12dp.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "0.333333333333",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language reference internal Kabap extension set scale to 12dp"
		},
		{
			"filename": "8_kabap_scale_negative.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "0.333",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language reference internal Kabap extension set scale to negative returns to default"
		},
		{
			"filename": "8_kabap_scale_invalid_string.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "0.333",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language reference internal Kabap extension set scale with string returns to default"
		},
		{
			"filename": "8_kabap_scale_invalid_float.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "0.3",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language reference internal Kabap extension set scale with float rounds to integer"
		},
		{
			"filename": "8_kabap_scale_read.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "5",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language reference internal Kabap extension get scale"
		},
		{
			"filename": "8_kabap_random_range.kabap",
			"extensions": [],
			"watchdog": 125000,
			"success": true,
			"stdout": "Range within bounds",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language reference internal Kabap extension check random number range"
		},
		{
			"filename": "8_kabap_random_parity.kabap",
			"extensions": [],
			"watchdog": 12500,
			"success": true,
			"stdout": "Parity acceptably symmetric",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language reference internal Kabap extension check random number parity"
		},
		{
			"filename": "8_kabap_random_distribution.kabap",
			"extensions": [],
			"watchdog": 61000,
			"success": true,
			"stdout": "Distribution acceptably symmetric",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Language reference internal Kabap extension check random number distribution"
		},
		{
			"filename": "8_kabap_random_readonly.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] kabap.random can only be read not written",
			"updated": "2018-08-06 01:16:21",
			"author": "Paul J",
			"description": "Language reference internal Kabap extension write random number rejected"
		},
		{
			"filename": "8_kabap_sleep_read.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] kabap.sleep can only be called not read",
			"updated": "2020-02-03 10:55:01",
			"author": "Paul J",
			"description": "Language reference internal Kabap extension read sleep rejected"
		},
		{
			"filename": "8_kabap_sleep_write.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2020-02-03 10:55:01",
			"author": "Paul J",
			"description": "Language reference internal Kabap extension write sleep"
		},
		{
			"filename": "8_kabap_character_default.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2020-02-03 10:55:01",
			"author": "Paul J",
			"description": "Language reference internal Kabap extension character read default"
		},
		{
			"filename": "8_kabap_ordinal_default.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2020-02-03 10:55:01",
			"author": "Paul J",
			"description": "Language reference internal Kabap extension ordinal read default"
		},
		{
			"filename": "8_kabap_ordinal_invalid1.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] kabap.ordinal must be between 0 and 255, inclusive",
			"updated": "2020-02-03 10:55:01",
			"author": "Paul J",
			"description": "Language reference internal Kabap extension ordinal write -1"
		},
		{
			"filename": "8_kabap_ordinal_invalid2.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] kabap.ordinal must be between 0 and 255, inclusive",
			"updated": "2020-02-03 10:55:01",
			"author": "Paul J",
			"description": "Language reference internal Kabap extension ordinal write 256"
		},
		{
			"filename": "8_kabap_character_ascii_table.kabap",
			"extensions": [],
			"watchdog": 0,
			"success": true,
			"stdout": "\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\u0008\u0009\u000a\u000b\u000c\u000d\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\u007f\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008a\u008b\u008c\u008d\u008e\u008f\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009a\u009b\u009c\u009d\u009e\u009f\u00a0\u00a1\u00a2\u00a3\u00a4\u00a5\u00a6\u00a7\u00a8\u00a9\u00aa\u00ab\u00ac\u00ad\u00ae\u00af\u00b0\u00b1\u00b2\u00b3\u00b4\u00b5\u00b6\u00b7\u00b8\u00b9\u00ba\u00bb\u00bc\u00bd\u00be\u00bf\u00c0\u00c1\u00c2\u00c3\u00c4\u00c5\u00c6\u00c7\u00c8\u00c9\u00ca\u00cb\u00cc\u00cd\u00ce\u00cf\u00d0\u00d1\u00d2\u00d3\u00d4\u00d5\u00d6\u00d7\u00d8\u00d9\u00da\u00db\u00dc\u00dd\u00de\u00df\u00e0\u00e1\u00e2\u00e3\u00e4\u00e5\u00e6\u00e7\u00e8\u00e9\u00ea\u00eb\u00ec\u00ed\u00ee\u00ef\u00f0\u00f1\u00f2\u00f3\u00f4\u00f5\u00f6\u00f7\u00f8\u00f9\u00fa\u00fb\u00fc\u00fd\u00fe\u00ff",
			"stderr": "",
			"updated": "2020-02-03 10:55:01",
			"author": "Paul J",
			"description": "Language reference internal Kabap extension character ASCII table"
		},
		{
			"filename": "8_kabap_character_single.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "75",
			"stderr": "",
			"updated": "2020-02-03 10:55:01",
			"author": "Paul J",
			"description": "Language reference internal Kabap extension character single"
		},
		{
			"filename": "8_kabap_character_escape_sequence.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "10 13 9 11 12 0",
			"stderr": "",
			"updated": "2020-02-03 10:55:01",
			"author": "Paul J",
			"description": "Language reference internal Kabap extension character escape sequences"
		},
		{
			"filename": "8_kabap_character_invalid1.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] kabap.character must be a single character or backslash-escaped code",
			"updated": "2020-02-03 10:55:01",
			"author": "Paul J",
			"description": "Language reference internal Kabap extension character write 3 bytes"
		},
		{
			"filename": "8_kabap_character_invalid2.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] kabap.character must be a single character or backslash-escaped code",
			"updated": "2020-02-03 10:55:01",
			"author": "Paul J",
			"description": "Language reference internal Kabap extension character write 2 bytes"
		},
		{
			"filename": "9_helloworld.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "Hello, world!",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Complex example - obviously the first essential"
		},
		{
			"filename": "9_iteration_loop.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "0 1 2 3 4 5 6 7 8 9 ",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Reggie",
			"description": "Complex example showing useful looping"
		},
		{
			"filename": "9_fibonacci.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "Fibonacci number 10 is 55 (1, 1, 2, 3, 5, 8, 13, 21, 34, 55)",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Complex example generating the Fibonacci sequence"
		},
		{
			"filename": "9_english_ordinal_suffix.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "102nd",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Reggie",
			"description": "Complex example printing English ordinal suffix for any number"
		},
		{
			"filename": "9_99_bottles_of_beer.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "3 bottles of beer on the wall, 3 bottles of beer. Take one down, pass it around, 2 bottles of beer on the wallâ€¦ 2 bottles of beer on the wall, 2 bottles of beer. Take one down, pass it around, 1 bottles of beer on the wallâ€¦ 1 bottles of beer on the wall, 1 bottles of beer. Take one down, pass it around, 0 bottles of beer on the wallâ€¦ ",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Reggie",
			"description": "Complex example printing lyrics of a popular travelling ditty"
		},
		{
			"filename": "9_temperature_convert.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "78.8Â°F",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Reggie",
			"description": "Complex example converting to-from Celsius and Farenheit"
		},
		{
			"filename": "9_kitchen_sink.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": ">4 âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“",
			"stderr": ">4 âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Complex testing every part of language in one script"
		},
		{
			"filename": "a_variable.kabap",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "Line 1: [FATAL] Undefined variable: ref",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Re-run variables; this script is specifically designed for another unit test"
		},
		{
			"filename": "a_extension.kabap",
			"extensions": [
				"KabapTestExtension"
			],
			"watchdog": -1,
			"success": true,
			"stdout": "1",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Re-run extensions; this script is specifically designed for another unit test"
		},
		{
			"filename": "1_tokens_empty.kat",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Parser read an empty file"
		},
		{
			"filename": "1_tokens_invalid_header1.kat",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Parser read a file without a recognisable header comment"
		},
		{
			"filename": "1_tokens_invalid_header2.kat",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Parser read a file with a partially recognisable header comment"
		},
		{
			"filename": "1_tokens_invalid_all_duplicate.kat",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Parser read a file with only single header comment having duplicate valid and invalid predicates"
		},
		{
			"filename": "1_tokens_invalid_identifier_missing.kat",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Parser read a file with only single header comment identifier missing"
		},
		{
			"filename": "1_tokens_invalid_identifier_wrong.kat",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Parser read a file with only single header comment identifier incorrect"
		},
		{
			"filename": "1_tokens_invalid_version_missing.kat",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Parser read a file with only single header comment version predicate missing"
		},
		{
			"filename": "1_tokens_invalid_version_zero.kat",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Parser read a file with only single header comment version predicate 0"
		},
		{
			"filename": "1_tokens_invalid_version_big.kat",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Parser read a file with only single header comment version predicate 99"
		},
		{
			"filename": "1_tokens_invalid_version_negative.kat",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Parser read a file with only single header comment version predicate negative"
		},
		{
			"filename": "1_tokens_invalid_version_doubled.kat",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Parser read a file with only single header comment version predicate invalid"
		},
		{
			"filename": "1_tokens_invalid_utf8_missing.kat",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Parser read a file with only single header comment UTF-8 predicate missing"
		},
		{
			"filename": "1_tokens_invalid_utf8_wrong.kat",
			"extensions": [],
			"watchdog": -1,
			"success": false,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Parser read a file with only single header comment UTF-8 predicate incorrect"
		},
		{
			"filename": "1_tokens_valid_header_min.kat",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Parser read a file with only single header comment minimum required predicates"
		},
		{
			"filename": "1_tokens_valid_header_max.kat",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Parser read a file with only single header comment maximum recognized and extraneous predicates"
		},
		{
			"filename": "1_tokens_valid_all_duplicate.kat",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": "",
			"stderr": "",
			"updated": "2018-02-23 15:40:00",
			"author": "Paul J",
			"description": "Parser read a file with only single header comment having duplicate invalid and valid predicates"
		},
		{
			"filename": "9_kitchen_sink_unminified.kat",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": ">4 âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“",
			"stderr": ">4 âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“",
			"updated": "2018-04-30 01:26:45",
			"author": "Paul J",
			"description": "Complex testing every part of language in one token file"
		},
		{
			"filename": "9_kitchen_sink_minified.kat",
			"extensions": [],
			"watchdog": -1,
			"success": true,
			"stdout": ">4 âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“",
			"stderr": ">4 âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“âœ“",
			"updated": "2018-04-30 01:26:45",
			"author": "Paul J",
			"description": "Complex testing every part of language in one token file, after minification"
		}
	]
}